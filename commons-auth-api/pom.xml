<?xml version="1.0" encoding="UTF-8"?>
<!--
MIT License

Copyright (c) 2018 rocketbase.io software productions GmbH

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.rocketbase.commons</groupId>
        <artifactId>commons-auth</artifactId>
        <version>LATEST-SNAPSHOT</version>
    </parent>

    <artifactId>commons-auth-api</artifactId>

    <properties>
        <delombok.output>${project.basedir}/target/delombok</delombok.output>
        <typescript-generator.version>2.32.889</typescript-generator.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.rocketbase.commons</groupId>
            <artifactId>commons-rest-api</artifactId>
            <version>${commons-rest.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>

        <!-- jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- used to render java.time correctly -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- jackson end -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>${lombok-maven-plugin.version}</version>
                <configuration>
                    <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                    <outputDirectory>${delombok.output}</outputDirectory>
                    <addOutputDirectory>false</addOutputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <sourcepath>${delombok.output}</sourcepath>
                </configuration>
                <executions>
                    <execution>
                        <id>xml-doclet</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <configuration>
                            <doclet>com.github.markusbernhardt.xmldoclet.XmlDoclet</doclet>
                            <useStandardDocletOptions>false</useStandardDocletOptions>
                            <docletArtifact>
                                <groupId>com.github.vojtechhabarta</groupId>
                                <artifactId>xml-doclet</artifactId>
                                <version>rewrite-using-new-javadoc-api-SNAPSHOT</version>
                            </docletArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>cz.habarta.typescript-generator</groupId>
                <artifactId>typescript-generator-maven-plugin</artifactId>
                <version>${typescript-generator.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
                <configuration>
                    <jsonLibrary>jackson2</jsonLibrary>
                    <javadocXmlFiles>
                        <file>target/site/apidocs/javadoc.xml</file>
                    </javadocXmlFiles>
                    <optionalAnnotations>
                        <optionalAnnotation>javax.annotation.Nullable</optionalAnnotation>
                    </optionalAnnotations>
                    <optionalProperties>useSpecifiedAnnotations</optionalProperties>
                    <classPatterns>
                        <classPattern>io.rocketbase.commons.dto.app*.**</classPattern>
                        <classPattern>io.rocketbase.commons.dto.auth*.**</classPattern>
                        <classPattern>io.rocketbase.commons.dto.forgot.**</classPattern>
                        <classPattern>io.rocketbase.commons.dto.openid.**</classPattern>
                        <classPattern>io.rocketbase.commons.dto.registration.**</classPattern>
                        <classPattern>io.rocketbase.commons.dto.validation.**</classPattern>
                        <classPattern>io.rocketbase.commons.dto.ExpirationInfo</classPattern>
                        <classPattern>io.rocketbase.commons.model.**</classPattern>
                        <classPattern>io.rocketbase.commons.model.Has*</classPattern>
                    </classPatterns>
                    <excludeClassPatterns>
                        <excludeClassPattern>**Builder</excludeClassPattern>
                        <excludeClassPattern>**Deserializer</excludeClassPattern>
                        <excludeClassPattern>**Serializer</excludeClassPattern>
                        <excludeClassPattern>**Exception</excludeClassPattern>
                        <excludeClassPattern>**Visitor</excludeClassPattern>
                        <excludeClassPattern>io.rocketbase.commons.dto.address.**</excludeClassPattern>
                        <excludeClassPattern>io.rocketbase.commons.model.user.SimpleUser**</excludeClassPattern>
                        <excludeClassPattern>io.rocketbase.commons.model.SimpleAppUser**</excludeClassPattern>
                    </excludeClassPatterns>
                    <excludeClasses>
                        <excludeClass>java.io.Serializable</excludeClass>
                        <excludeClass>java.lang.Iterable</excludeClass>
                        <excludeClass>java.util.Locale</excludeClass>
                        <excludeClass>java.lang.Cloneable</excludeClass>
                        <excludeClass>io.rocketbase.commons.dto.validation.ModelConstraint</excludeClass>
                        <excludeClass>io.rocketbase.commons.dto.validation.ValidationConstraint</excludeClass>
                    </excludeClasses>
                    <customTypeMappings>
                        <customTypeMapping>java.net.URL:string</customTypeMapping>
                        <customTypeMapping>java.time.LocalDate:string</customTypeMapping>
                        <customTypeMapping>java.time.LocalTime:string</customTypeMapping>
                        <customTypeMapping>java.time.LocalDateTime:string</customTypeMapping>
                        <customTypeMapping>java.time.Instant:string</customTypeMapping>
                        <customTypeMapping><![CDATA[java.util.Map<T1, T2>:Record<string,string>]]></customTypeMapping>
                        <customTypeMapping>io.rocketbase.commons.obfuscated.ObfuscatedId:string</customTypeMapping>
                        <customTypeMapping>io.rocketbase.commons.dto.ErrorResponse:rest.ErrorResponse</customTypeMapping>
                        <customTypeMapping><![CDATA[io.rocketbase.commons.dto.PageableResult<E>:rest.PageableResult<E>]]></customTypeMapping>
                        <customTypeMapping>io.rocketbase.commons.model.HasKeyValue:rest.HasKeyValue</customTypeMapping>
                        <customTypeMapping>io.rocketbase.commons.model.HasFirstAndLastName:rest.HasFirstAndLastName</customTypeMapping>
                        <customTypeMapping>io.rocketbase.commons.translation.Translation:rest.Translation</customTypeMapping>
                        <customTypeMapping>io.rocketbase.commons.dto.ErrorResponse:rest.ErrorResponse</customTypeMapping>
                        <customTypeMapping><![CDATA[io.rocketbase.commons.model.EntityWithKeyValue<T>:rest.EntityWithKeyValue<T>]]></customTypeMapping>
                    </customTypeMappings>
                    <importDeclarations>
                        <import>import * as rest from "./commons-rest-api"</import>
                    </importDeclarations>
                    <outputFileType>implementationFile</outputFileType>
                    <outputKind>module</outputKind>
                    <noEslintDisable>true</noEslintDisable>
                    <noTslintDisable>true</noTslintDisable>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>